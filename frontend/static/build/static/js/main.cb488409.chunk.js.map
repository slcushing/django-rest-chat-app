{"version":3,"sources":["components/RegistrationForm/RegistrationForm.js","components/MessageForm/MessageForm.js","components/RoomSideBar/RoomForm.js","components/RoomSideBar/RoomSideBar.js","components/MessageListView/MessageListView.js","components/LoginForm/LoginForm.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["RegistrationForm","props","useState","username","email","password1","password2","user","setUser","error","setError","handleChange","e","target","name","value","prevState","className","onSubmit","preventDefault","handleRegistration","htmlFor","type","id","placeholder","required","onChange","MessageForm","newMessage","setNewMessage","message","handleMessage","RoomForm","newRoom","setNewRoom","addNewRoom","a","options","method","headers","Cookies","get","body","JSON","stringify","fetch","response","console","warn","roomList","json","log","RoomSideBar","roomListSideBarHTML","map","room","onClick","getMessages","title","MessageListView","messageListViewHTML","messageList","LoginForm","password","handleLogin","App","handleError","err","setRoomList","setMessagesFromRoom","selectedRoom","setSelectedRoom","selection","setSelection","catch","data","set","key","getRoomList","matchedRoom","find","toString","messages","ok","useEffect","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb488409.chunk.js","sourcesContent":["import {useState} from 'react';\n\nfunction RegistrationForm(props) {\n    const [user, setUser] = useState ({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    });\n\n    const [error, setError] = useState(null);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match.')\n        } else {\n            props.handleRegistration(user)\n        }\n    }\n\n    return (\n        <form className='mt-3' onSubmit = {handleSubmit}>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    required\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={user.username}/>\n        </div>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter email\"\n                    required\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={user.email}/>\n        </div>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"password1\">Password</label>\n            <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password1\"\n                    placeholder=\"Enter password\"\n                    required\n                    name=\"password1\"\n                    onChange={handleChange}\n                    value={user.password1}/>\n        </div>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"password2\">Confirm Password</label>\n            <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password2\"\n                    placeholder=\"Confirm password\"\n                    required\n                    name=\"password2\"\n                    onChange={handleChange}\n                    value={user.password2}/>\n            <span className=\"text-danger mt-2\">{error}</span>\n        </div>\n\n        <button type=\"submit\" className=\"bt btn-primary mt-3\">Register</button>\n\n        </form>\n    )\n}\n\nexport default RegistrationForm","import {useState} from 'react';\n\nfunction MessageForm(props) {\n   const [newMessage, setNewMessage] = useState({});\n\n\n    const handleChange = (e) => {\n        const {message, value} = e.target;\n        setNewMessage(prevState => ({\n            ...prevState,\n            [message]:value,\n        })); \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        props.handleMessage(newMessage)\n    }\n\n    return (\n        <form className='mt-2' onSubmit = {handleSubmit}>\n        <div className= \"form-group\">\n            <textarea id='body' \n                        className=\"text-area\"\n                        name='body' \n                        placeholder=\"Message here\"\n                        onChange={handleChange}>\n            </textarea>\n            <button type=\"submit\" name={props.user} onChange={handleChange}>Send</button>\n        </div>\n        </form>\n\n    )\n    \n}\n\nexport default MessageForm","import {useState} from 'react'\nimport Cookies from 'js-cookie';\n\nfunction RoomForm(props) {\n    const[newRoom, setNewRoom] = useState();\n\n \n    const addNewRoom = async () => {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': Cookies.get('csrftoken'), \n            },\n            body: JSON.stringify([newRoom]),\n        }\n\n        const response = await fetch('/api_v1/chats/rooms/', options);\n        if(!response) {\n            console.warn(response);\n        } else {\n            setNewRoom([...props.roomList, newRoom])\n            return response.json();\n        }\n    }\n   \n\n    function handleChange(e) {\n        setNewRoom(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        addNewRoom(newRoom);\n        console.log({newRoom});\n    }\n\n    return (\n        \n        <div>\n            <form className='room-add' onSubmit = {handleSubmit}>   \n            <input type=\"text\"\n                    id=\"text\"\n                    placeholder=\"Add New Room\"\n                    name=\"addnewroom\"\n                    onChange={handleChange}\n            />\n            <button type='submit'>Add</button>\n            </form>\n        </div>\n        \n    );\n}\n\nexport default RoomForm\n","import RoomForm from \"./RoomForm\";\n\nfunction RoomSideBar(props) {\nconst roomListSideBarHTML = props.roomList.map((room) => (\n    <li className='room-button' key={room.id}>\n        <button value={room.id}\n                className='mt-2'\n                type='button'\n                onClick={props.getMessages}\n                >\n            {room.title}\n        </button>\n    </li>\n    ));\n\n    return (\n        <aside className=\"room-side-bar\">\n            <header className=\"rooms-header\">Chat Rooms</header>\n            <ul>{roomListSideBarHTML}</ul>\n            <RoomForm />\n        </aside>\n    );\n    }\n\nexport default RoomSideBar\n","function MessageListView(props) {\n    const messageListViewHTML = props.messageList.map((message) => (\n        <div className=\"message-body\" key={message.id}>\n            {message.body}\n        </div>\n    ));\n\n    return (\n        <section className=\"message-list-view\">\n           \n            {messageListViewHTML}\n            \n        </section>\n    )\n}\n\nexport default MessageListView","import {useState} from 'react';\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState ({\n        username:'',\n        email:'',\n        password:'',\n    });\n\n    const [error, setError] = useState(null);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // if(user.password !== user.password){\n        //     //need to target user password that they already created\n        //     setError('Incorrect password')\n        // } else {\n        props.handleLogin(user);\n        setUser(user);\n       \n        \n    }\n\n    return (\n        <form className='mt-3' onSubmit = {handleSubmit}>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" \n                    className=\"form-control\"\n                    id=\"username\"\n                    placeholder=\"Enter username\"\n                    required\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={user.username}/>\n        </div>\n\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" \n                    className=\"form-control\"\n                    id=\"email\"\n                    placeholder=\"Enter email\"\n                    required\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={user.email}/>\n        </div>\n        <div className=\"form-group text-left mb-3\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" \n                    className=\"form-control\"\n                    id=\"password\"\n                    placeholder=\"Enter password\"\n                    required\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={user.password}/>\n            <span className=\"text-danger mt-2\">{error}</span>\n        </div>\n\n        <button type=\"submit\" className=\"bt btn-primary mt-3\">Login</button>\n\n        </form>\n    )\n\n\n}\n\nexport default LoginForm","import './App.css';\nimport { useState,useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport RegistrationForm from '../RegistrationForm/RegistrationForm';\nimport MessageForm from '../MessageForm/MessageForm';\nimport RoomSideBar from '../RoomSideBar/RoomSideBar';\nimport RoomForm from '../RoomSideBar/RoomForm';\nimport MessageListView from '../MessageListView/MessageListView';\nimport LoginForm from '../LoginForm/LoginForm';\n\n\n\nfunction App() {\n  const handleError = (err) => console.warn(err);\n  const [roomList, setRoomList] = useState([])\n  const [messageList, setMessagesFromRoom] = useState([])\n  const [selectedRoom, setSelectedRoom] = useState({id:0, title:'room0'});\n  const [selection, setSelection] = useState(!!Cookies.get('Authorization') ? 'messages' : 'login');\n  \n\n  const handleRegistration = async (user) => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    }\n\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n    if(!response) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set('Authorization', `Token ${data.key}`);\n      setSelection('messages');\n    }\n  }\n\n  const handleLogin = async (user) => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    }\n\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n    if(!response) {\n      console.warn(response);\n    } else {\n      const data = await response.json();\n      Cookies.set('Authorization', `Token ${data.key}`);\n      setSelection('messages');\n    }\n  }   \n\n  const getRoomList = async () => {\n    const response = await fetch(`/api_v1/chats/rooms`);\n    const data = await response.json();\n    setRoomList(data);\n  }\n  \n\n  useEffect(() => {\n    getRoomList();\n  }, [])\n\n  \n  async function getMessages(e) {\n    const response = await fetch(`/api_v1/chats/rooms/${e.target.value}/`);\n    const data = await response.json();\n    const matchedRoom = roomList.find(roomList => {\n      const roomIDStr = roomList.id.toString()\n      return roomIDStr === e.target.value\n    })\n    setSelectedRoom(matchedRoom)\n    setMessagesFromRoom(data.messages);\n  };\n\n\n  async function handleMessage(user, body){\n    \n    const newMessage = {\n      user: user, \n      room: selectedRoom.id,\n      body: body, \n    };\n    console.log({newMessage});\n\n    const response = await fetch(`/api_v1/chats/${selectedRoom.id}/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(newMessage),\n    });\n    if(response.ok){\n      return response.json(); \n    }  \n  }\n\n  const handleLogout = () => {\n    \n    Cookies.remove('Authorization');\n    setSelection('login');\n  }\n\n\n  return (\n    <>\n    {selection === 'login' &&  <LoginForm handleLogin={handleLogin}/>}\n    {selection === 'registration' && <RegistrationForm handleRegistration={handleRegistration}/>}\n    {selection === 'messages' && (\n       <div className=\"app\">\n       <header className=\"header\">The Return of AIM </header>\n       <button type=\"button\" onClick={handleLogout}>Log Out</button>\n       <div className=\"container\">\n \n         <div className=\"message-container\">\n           <header className=\"message-window-header\">Message Window</header>\n           <MessageListView messageList={messageList} selectedRoom={selectedRoom}/>\n           <MessageForm handleMessage={handleMessage}/>\n         </div>\n         <div className=\"rooms-container\">\n           <RoomSideBar roomList={roomList} getMessages={getMessages}/>\n         </div>\n       </div>\n     </div>\n    )}\n    </>\n  );\n}\n\nexport default App;\n\n\n// <RegistrationForm handleRegistration={handleRegistration}/>\n// <LoginForm handleLogin={handleLogin}/>\n// <MessageForm handleMessage={handleMessage}/>\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}